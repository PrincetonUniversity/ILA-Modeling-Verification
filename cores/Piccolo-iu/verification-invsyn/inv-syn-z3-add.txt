0 0 3
(1'b1) == (((!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(!((m1.gpr_regfile.f_reset_rsps.full_reg) == (1'b0))) ||(!((m1.csr_regfile.f_reset_rsps.empty_reg) == (1'b0)))) &&((!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(!((m1.csr_regfile.f_reset_rsps.empty_reg) == (1'b0))) ||(!((m1.stage3_f_reset_rsps.empty_reg) == (1'b0)))))
(1'b1) == (((!((m1.stage2_rg_full) == (1'b1))) ||(!((m1.csr_regfile.rg_state) == (1'b1))) ||(!((m1.rg_run_on_reset) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(!(m1.stage2_rg_stage2[101:101])) ||((m1.near_mem.dcache.rg_addr[4:4]) == (1'b1)) ||(!((m1.near_mem.dcache.rg_pa[4:4]) == (1'b1)))) &&(!((m1.csr_regfile.rg_nmi) == (1'b1))) &&((!((m1.rg_state[0:0]) == (1'b1))) ||(!((m1.stage2_f_reset_reqs.empty_reg) == (1'b0))) ||(!((m1.csr_regfile.rg_state) == (1'b0)))) &&(((m1.stage3_f_reset_reqs.full_reg) == (1'b1)) ||(!(m1.rg_trap_instr[22:22])) ||(!(m1.rg_trap_instr[20:20])) ||(!(m1.rg_trap_instr[26:26])) ||(!((m1.stage2_f_reset_reqs.empty_reg) == (1'b0))) ||(!((m1.csr_regfile.rg_state) == (1'b0)))) &&((!((m1.stage2_rg_full) == (1'b1))) ||(!((m1.rg_run_on_reset) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.full_reg) == (1'b0)))))
(1'b1) == (((!((m1.stage3_f_reset_rsps.empty_reg) == (1'b0))) ||(!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.full_reg) == (1'b0)))) &&((!((m1.stage2_f_reset_reqs.empty_reg) == (1'b0))) ||(!((m1.rg_state[0:0]) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(m1.rg_run_on_reset[0:0])) &&((!((m1.stage2_rg_full) == (1'b1))) ||(!((m1.stage2_f_reset_reqs.empty_reg) == (1'b0))) ||(!((m1.rg_state[0:0]) == (1'b1))) ||(!((m1.stage3_f_reset_reqs.empty_reg) == (1'b1))) ||(!((m1.stage3_f_reset_rsps.full_reg) == (1'b1))) ||(m1.stage2_rg_stage2[168:168]) ||(!(m1.rg_cur_priv[1:1]))))
(forall ((A wrapper_s))   (! (let ((a!1 (or (not (= (|wrapper#396| A) #b1))                     (not (= (|wrapper#168| A) #b0))                     (not (= (|wrapper#124| A) #b0))))            (a!2 (or (not (= (|wrapper#390| A) #b1))                     (not (= (|wrapper#396| A) #b1))                     (not (= (|wrapper#124| A) #b0))                     (not (= (|wrapper#394| A) #b0)))))        (= (INV A) (and a!1 a!2)))      :weight 0)) 
(forall ((A wrapper_s))   (! (let ((a!1 (not (= ((_ extract 4 4) (|wrapper#244| A)) #b1)))            (a!3 (not (= ((_ extract 0 0) (|wrapper#343| A)) #b1)))            (a!5 (or (= (|wrapper#386| A) #b1)                     (not ((_ bit2bool 22) (|wrapper#349| A)))                     (not ((_ bit2bool 20) (|wrapper#349| A)))                     (not ((_ bit2bool 26) (|wrapper#349| A)))                     (not (= (|wrapper#367| A) #b0))                     (not (= (|wrapper#137| A) #b0))))            (a!6 (or (not (= (|wrapper#377| A) #b1))                     (not (= (|wrapper#341| A) #b1))                     (not (= (|wrapper#384| A) #b1))                     (not (= (|wrapper#390| A) #b1))                     (not (= (|wrapper#386| A) #b0)))))      (let ((a!2 (or (not (= (|wrapper#377| A) #b1))                     (not (= (|wrapper#137| A) #b1))                     (not (= (|wrapper#341| A) #b1))                     (not (= (|wrapper#384| A) #b1))                     (not (= (|wrapper#390| A) #b1))                     (not ((_ bit2bool 101) (|wrapper#381| A)))                     (= ((_ extract 4 4) (|wrapper#225| A)) #b1)                     a!1))            (a!4 (or a!3                     (not (= (|wrapper#367| A) #b0))                     (not (= (|wrapper#137| A) #b0)))))      (let ((a!7 (and a!2 (not (= (|wrapper#134| A) #b1)) a!4 a!5 a!6)))        (= (INV A) a!7))))      :weight 0)) 
(forall ((A wrapper_s))   (! (let ((a!1 (or (not (= (|wrapper#386| A) #b0))                     (not (= (|wrapper#382| A) #b1))                     (not (= (|wrapper#388| A) #b1))                     (not (= (|wrapper#384| A) #b0))))            (a!2 (not (= ((_ extract 0 0) (|wrapper#341| A)) #b1))))      (let ((a!3 (or (not (= (|wrapper#365| A) #b0))                     a!2                     (not (= (|wrapper#382| A) #b1))                     (not (= (|wrapper#388| A) #b1))                     ((_ bit2bool 0) (|wrapper#338| A))))            (a!4 (or (not (= (|wrapper#374| A) #b1))                     (not (= (|wrapper#365| A) #b0))                     a!2                     (not (= (|wrapper#382| A) #b1))                     (not (= (|wrapper#388| A) #b1))                     ((_ bit2bool 168) (|wrapper#379| A))                     (not ((_ bit2bool 1) (|wrapper#332| A))))))        (= (INV A) (and a!1 a!3 a!4))))      :weight 0)) 
